{"ast":null,"code":"var _jsxFileName = \"D:\\\\lab4\\\\client\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [weatherData, setWeatherData] = useState([]); // Состояние для данных о погоде\n  const [error, setError] = useState(null); // Состояние для ошибок\n  const currentDate = new Date();\n  const formattedDate = currentDate.toLocaleDateString(undefined, {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n  const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      console.log('Fetching weather data...');\n      try {\n        const response = await fetch('/api/weather?query=moscow');\n        console.log(`Response status: ${response.status}`);\n        console.log(`Response headers:`, [...response.headers.entries()]);\n        const contentType = response.headers.get('Content-Type');\n\n        // Проверяем, является ли ответ JSON\n        if (!response.ok) {\n          throw new Error(`Error fetching weather data: ${response.statusText}`);\n        }\n        if (!contentType || !contentType.includes('application/json')) {\n          const responseText = await response.text(); // Считываем полный текст ответа для диагностики\n          console.error('Response text:', responseText);\n          throw new Error('Invalid content type received: Expected JSON');\n        }\n        const data = await response.json();\n        console.log('Weather data received:', data);\n        setWeatherData(data || []);\n      } catch (err) {\n        console.error('Error while fetching weather data:', err.message);\n        setError(err.message);\n      }\n    };\n    fetchWeatherData();\n  }, []);\n  console.log('Home component rendered'); // Лог рендера компонента\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to the Bookstore\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Explore our vast collection of books and find your next favorite read.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Discover genres from fiction to non-fiction, and everything in between.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-time-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Current Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 20\n        }, this), \" \", formattedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Time Zone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 20\n        }, this), \" \", timeZone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Weather Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), error ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), console.error('Error displayed to user:', error), \" \"]\n      }, void 0, true) : weatherData.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: weatherData.map(city => {\n          var _city$country, _city$district;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"City:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), \" \", city.name, \", \", ((_city$country = city.country) === null || _city$country === void 0 ? void 0 : _city$country.name) || 'Unknown Country', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Region:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), \" \", ((_city$district = city.district) === null || _city$district === void 0 ? void 0 : _city$district.name) || 'N/A', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `https://www.gismeteo.com${city.url}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"View Weather\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)]\n          }, city.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading weather data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"n43h4jdHp4GC78f8WJF2Q8CAZJg=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","weatherData","setWeatherData","error","setError","currentDate","Date","formattedDate","toLocaleDateString","undefined","weekday","year","month","day","timeZone","Intl","DateTimeFormat","resolvedOptions","fetchWeatherData","console","log","response","fetch","status","headers","entries","contentType","get","ok","Error","statusText","includes","responseText","text","data","json","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","city","_city$country","_city$district","name","country","district","href","url","target","rel","id","_c","$RefreshReg$"],"sources":["D:/lab4/client/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n    const [weatherData, setWeatherData] = useState([]); // Состояние для данных о погоде\r\n    const [error, setError] = useState(null); // Состояние для ошибок\r\n    const currentDate = new Date();\r\n    const formattedDate = currentDate.toLocaleDateString(undefined, {\r\n        weekday: 'long',\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n    });\r\n    const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n\r\n    useEffect(() => {\r\n        const fetchWeatherData = async () => {\r\n            console.log('Fetching weather data...');\r\n    \r\n            try {\r\n                const response = await fetch('/api/weather?query=moscow');\r\n                console.log(`Response status: ${response.status}`);\r\n                console.log(`Response headers:`, [...response.headers.entries()]);\r\n                const contentType = response.headers.get('Content-Type');\r\n    \r\n                // Проверяем, является ли ответ JSON\r\n                if (!response.ok) {\r\n                    throw new Error(`Error fetching weather data: ${response.statusText}`);\r\n                }\r\n                if (!contentType || !contentType.includes('application/json')) {\r\n                    const responseText = await response.text(); // Считываем полный текст ответа для диагностики\r\n                    console.error('Response text:', responseText);\r\n                    throw new Error('Invalid content type received: Expected JSON');\r\n                }\r\n    \r\n                const data = await response.json();\r\n                console.log('Weather data received:', data);\r\n                setWeatherData(data || []);\r\n            } catch (err) {\r\n                console.error('Error while fetching weather data:', err.message);\r\n                setError(err.message);\r\n            }\r\n        };\r\n    \r\n        fetchWeatherData();\r\n    }, []);\r\n    \r\n\r\n    console.log('Home component rendered'); // Лог рендера компонента\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <h2>Welcome to the Bookstore</h2>\r\n            <p>Explore our vast collection of books and find your next favorite read.</p>\r\n            <p>Discover genres from fiction to non-fiction, and everything in between.</p>\r\n            <div className=\"date-time-info\">\r\n                <p><strong>Current Date:</strong> {formattedDate}</p>\r\n                <p><strong>Time Zone:</strong> {timeZone}</p>\r\n            </div>\r\n            <div className=\"weather-info\">\r\n                <h3>Weather Information</h3>\r\n                {error ? (\r\n                    <>\r\n                        <p className=\"error\">Error: {error}</p>\r\n                        {console.error('Error displayed to user:', error)} {/* Лог ошибки, отображаемой пользователю */}\r\n                    </>\r\n                ) : weatherData.length > 0 ? (\r\n                    <ul>\r\n                        {weatherData.map((city) => (\r\n                            <li key={city.id}>\r\n                                <strong>City:</strong> {city.name}, {city.country?.name || 'Unknown Country'}\r\n                                <br />\r\n                                <strong>Region:</strong> {city.district?.name || 'N/A'}\r\n                                <br />\r\n                                <a\r\n                                    href={`https://www.gismeteo.com${city.url}`}\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener noreferrer\"\r\n                                >\r\n                                    View Weather\r\n                                </a>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : (\r\n                    <p>Loading weather data...</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}