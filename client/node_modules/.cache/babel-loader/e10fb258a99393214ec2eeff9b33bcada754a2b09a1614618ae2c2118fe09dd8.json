{"ast":null,"code":"var _jsxFileName = \"D:\\\\lab4\\\\client\\\\src\\\\pages\\\\OrderPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OrderPage() {\n  _s();\n  const [shippingAddress, setShippingAddress] = useState('');\n  const [paymentMethod, setPaymentMethod] = useState('');\n  const [error, setError] = useState(null);\n  const [cartItems, setCartItems] = useState([]); // Define cartItems state\n  const [orderSuccess, setOrderSuccess] = useState(false);\n\n  // Fetch cart items on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      setError('Для оформления заказа необходимо авторизоваться');\n      return;\n    }\n    fetch('http://localhost:5000/api/cart', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Ошибка при загрузке корзины');\n      }\n      return response.json();\n    }).then(data => setCartItems(data.items)) // Set cart items\n    .catch(err => setError(err.message)); // Set error if any\n  }, []);\n\n  // Handle form submission for the order\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!shippingAddress || !paymentMethod) {\n      setError('Пожалуйста, заполните все поля!');\n      return;\n    }\n    const token = localStorage.getItem('jwt');\n    const orderData = {\n      items: cartItems.map(item => ({\n        book: item.book._id,\n        quantity: item.quantity\n      })),\n      totalPrice: cartItems.reduce((total, item) => total + item.book.price * item.quantity, 0),\n      shippingAddress,\n      paymentMethod\n    };\n    fetch('http://localhost:5000/api/orders', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(orderData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Ошибка оформления заказа');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Заказ оформлен:', data);\n      setOrderSuccess(true); // Set order success\n      setShippingAddress('');\n      setPaymentMethod('');\n    }).catch(err => {\n      console.error('Ошибка:', err);\n      setError('Ошибка оформления заказа');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041E\\u0444\\u043E\\u0440\\u043C\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }, this), orderSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: \"\\u0417\\u0430\\u043A\\u0430\\u0437 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u043E\\u0444\\u043E\\u0440\\u043C\\u043B\\u0435\\u043D!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: shippingAddress,\n          onChange: e => setShippingAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u0421\\u043F\\u043E\\u0441\\u043E\\u0431 \\u043E\\u043F\\u043B\\u0430\\u0442\\u044B:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: paymentMethod,\n          onChange: e => setPaymentMethod(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u041E\\u0444\\u043E\\u0440\\u043C\\u0438\\u0442\\u044C \\u0437\\u0430\\u043A\\u0430\\u0437\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(OrderPage, \"e/gw9IOa7c18vU4ef38IGLjla70=\");\n_c = OrderPage;\nexport default OrderPage;\nvar _c;\n$RefreshReg$(_c, \"OrderPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","OrderPage","_s","shippingAddress","setShippingAddress","paymentMethod","setPaymentMethod","error","setError","cartItems","setCartItems","orderSuccess","setOrderSuccess","token","localStorage","getItem","fetch","method","headers","then","response","ok","Error","json","data","items","catch","err","message","handleSubmit","e","preventDefault","orderData","map","item","book","_id","quantity","totalPrice","reduce","total","price","body","JSON","stringify","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/lab4/client/src/pages/OrderPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction OrderPage() {\r\n    const [shippingAddress, setShippingAddress] = useState('');\r\n    const [paymentMethod, setPaymentMethod] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const [cartItems, setCartItems] = useState([]); // Define cartItems state\r\n    const [orderSuccess, setOrderSuccess] = useState(false);\r\n\r\n    // Fetch cart items on component mount\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('jwt');\r\n        if (!token) {\r\n            setError('Для оформления заказа необходимо авторизоваться');\r\n            return;\r\n        }\r\n\r\n        fetch('http://localhost:5000/api/cart', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n        })\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                throw new Error('Ошибка при загрузке корзины');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then((data) => setCartItems(data.items)) // Set cart items\r\n        .catch((err) => setError(err.message)); // Set error if any\r\n    }, []);\r\n\r\n    // Handle form submission for the order\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!shippingAddress || !paymentMethod) {\r\n            setError('Пожалуйста, заполните все поля!');\r\n            return;\r\n        }\r\n\r\n        const token = localStorage.getItem('jwt');\r\n        const orderData = {\r\n            items: cartItems.map(item => ({\r\n                book: item.book._id,\r\n                quantity: item.quantity\r\n            })),\r\n            totalPrice: cartItems.reduce((total, item) => total + item.book.price * item.quantity, 0),\r\n            shippingAddress,\r\n            paymentMethod\r\n        };\r\n\r\n        fetch('http://localhost:5000/api/orders', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(orderData),\r\n        })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Ошибка оформления заказа');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log('Заказ оформлен:', data);\r\n            setOrderSuccess(true); // Set order success\r\n            setShippingAddress('');\r\n            setPaymentMethod('');\r\n        })\r\n        .catch(err => {\r\n            console.error('Ошибка:', err);\r\n            setError('Ошибка оформления заказа');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Оформление заказа</h1>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            {orderSuccess && <p style={{ color: 'green' }}>Заказ успешно оформлен!</p>}\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    Адрес доставки:\r\n                    <input \r\n                        type=\"text\" \r\n                        value={shippingAddress} \r\n                        onChange={(e) => setShippingAddress(e.target.value)} \r\n                    />\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    Способ оплаты:\r\n                    <input \r\n                        type=\"text\" \r\n                        value={paymentMethod} \r\n                        onChange={(e) => setPaymentMethod(e.target.value)} \r\n                    />\r\n                </label>\r\n                <br />\r\n                <button type=\"submit\">Оформить заказ</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}